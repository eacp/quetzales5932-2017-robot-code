// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.quetzales5932.jack.commands;
import org.quetzales5932.jack.Robot;

import edu.wpi.first.wpilibj.command.Command;

/**
 *
 */
public class TurnDegrees extends Command {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS
    private double m_degrees;
 
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS
    
    //constantes
    private final double defaultTurnSpeed = 0.7; //girar lento para mayor prescision
    private final int errorMargin = 3;
    //valores para girar
    private double turnSpeed;
    private int targetAngle;
    
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
    public TurnDegrees(double degrees) {

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING
        m_degrees = degrees;

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
        requires(Robot.chassis);

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
    }

    // Called just before this Command runs the first time
    protected void initialize() {
    	System.out.println("vamo a girar");
    	
    	//reiniciar el gyro
    	Robot.chassis.resetGyro();
    	System.out.println("Se ha reiniciado el giroscopio");
    	
    	//establecer el objetivo con base al angulo establecido
    	targetAngle = (int) (m_degrees < 0 ? 360 + m_degrees : m_degrees);
    	//si el angulo ya viene en negativo no hay necesidad de restarlo ji de anadir el menos
    	
    	//establecer la velocidad de giro con base a los grados
    	turnSpeed = m_degrees < 0 ? -defaultTurnSpeed : defaultTurnSpeed;
    	System.out.println("Se ejecutara un giro de " + m_degrees );
    }

    // Called repeatedly when this Command is scheduled to run
    protected void execute() {
    	Robot.chassis.arcadeDrive(0,turnSpeed);
    }

    // Make this return true when this Command no longer needs to run execute()
    protected boolean isFinished() {
        int currentAngle = Robot.chassis.getAngle();
		return Math.abs(targetAngle - currentAngle) < errorMargin;
    }

    // Called once after isFinished returns true
    protected void end() {
    	System.out.println("Ya terminamos de girar");
    	Robot.chassis.stop();
    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    protected void interrupted() {
    	System.out.println("Terminamos de girar por cuestiones inesperadas :/");
    }
}
