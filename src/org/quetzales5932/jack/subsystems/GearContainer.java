// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.quetzales5932.jack.subsystems;

import org.quetzales5932.jack.RobotMap;
import org.quetzales5932.jack.commands.*;

import edu.wpi.first.wpilibj.Servo;

import edu.wpi.first.wpilibj.command.Subsystem;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;


/**
 *
 */
public class GearContainer extends Subsystem {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    private final Servo gearServo = RobotMap.gearContainerGearServo; //4
    private final Servo gearServo2 = RobotMap.gearContainerGearServo2; //7

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    //SERVO 1
  //-------PWM 4--------
    private final int openAngleS1 = 0; //4
    private final int closedAngleS1 = 32;//4
    //SERVO 2
    //-------PWM 7--------
    private final int openAngleS2 = 23; //7
    private final int closedAngleS2 = 0; //7
    
    private String state;

    // Put methods for controlling this subsystem
    // here. Call these from Commands.

    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        // Set the default command for a subsystem here.
        // setDefaultCommand(new MySpecialCommand());
    }
    
    public void open(){
    	gearServo.setAngle(openAngleS1);
    	gearServo2.setAngle(openAngleS2);
    	state = "open";
    	//poner indicadores para que sea mas facil
    	SmartDashboard.putBoolean("DB/LED 0", true);
    	SmartDashboard.putString("DB/String 0", "Embudo Abierto");
    	SmartDashboard.putString("DB/String 1", "S4:" + openAngleS1);
    	SmartDashboard.putString("DB/String 2", "S7:" + openAngleS2);
    }
    
    public void close(){
    	gearServo.setAngle(closedAngleS1);
    	gearServo2.setAngle(closedAngleS2);
    	state = "closed";
    	//poner indicadores para que sea mas facil
    	SmartDashboard.putBoolean("DB/LED 0", false);
    	SmartDashboard.putString("DB/String 0", "Embudo Cerrado");
    	SmartDashboard.putString("DB/String 1", "S4:" + closedAngleS1);
    	SmartDashboard.putString("DB/String 2", "S7:" + closedAngleS2);
    } 
    
    public boolean isOpen(){
    	return state == "open";
    }
    
    public void setServos(int s1,int s2){
    	gearServo.setAngle(s1);
    	System.out.println("S4 "  + gearServo.getAngle());
    	gearServo2.setAngle(s1);
    	System.out.println("S7 "  + gearServo2.getAngle());
    }
}

